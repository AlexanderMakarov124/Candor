@using Microsoft.AspNetCore.Identity
@using Candor.Domain.Models
@model Candor.Domain.Models.Post

@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Post";
}

<div class="post">
    <div class="row">
        <div class="col-md-auto">
            <label>@Model.User!.UserName</label>
        </div>

        <div class="col-md-auto">
            @if (Model.CreatedAt.Year == DateTime.Now.Year)
            {
                <label>@Model.CreatedAt.ToString("MMM d")</label>
            }
            else
            {
                <label>@Model.CreatedAt.ToString("MMM d, yyyy")</label>
            }
        </div>

        @if (await UserManager.GetUserAsync(User) == Model.User)
        {
            <div class="dropdown col-md-auto">
                <div class="dropdown-points" data-bs-toggle="dropdown" id="postActions" aria-expanded="false">
                    <svg class="dropdown-points dropdown-toggle"
                     data-bs-container="body"
                     data-bs-toggle="popover"
                     data-bs-trigger="hover focus"
                     data-bs-placement="top"
                     data-bs-content="Actions"
                     xmlns="http://www.w3.org/2000/svg">

                        <circle cx="10" cy="10" r="2" />
                        <circle cx="16" cy="10" r="2" />
                        <circle cx="22" cy="10" r="2" />
                    </svg>
                </div>

                <ul class="dropdown-menu" aria-labelledby="postActions">
                    <li><a class="dropdown-item" asp-action="EditPost" asp-route-id="@Model.Id">Edit</a></li>
                    <li><a class="dropdown-item" data-bs-toggle="modal" data-bs-target="#deleteModal">Delete</a></li>
                </ul>
            </div>

            <div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deleteModalLabel">Delete post</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>

                        <div class="modal-body">
                            Do you really want to delete this post?
                        </div>

                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <form method="post" asp-action="DeletePost" asp-route-id="@Model.Id">
                                <button type="submit" class="btn btn-primary">Delete</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        }

    </div>

    <h4 class="post-name">@Model.Title</h4>
    <p class="post-content">@Model.Content</p>
    <label>Views: @Model.ViewsCount</label>
    @if (User.Identity!.IsAuthenticated)
    {
        <button class="like-button" type="button" onclick="Like(@Model.Id)">
            <img width="25" height="25" src="/img/like-icon.svg" alt="Like" />
        </button>
    }
    <label>Likes:</label>
    <label id="likes">@Model.Likes</label>
    <label class="comments-label" onclick="showComments()">Comments:</label>
    <label>@Model.Comments.Count</label>

    <div id="comments" hidden>
        <div>
            <form method="post" asp-action="CreateComment" asp-route-postId="@Model.Id">
                <label>Make a comment:</label>
                <textarea class="form-control comment-content" name="Content"></textarea>

                <button class="btn btn-primary" type="submit">Create</button>
            </form>
        </div>

        @{
            var padding = 0;
            async Task RenderComments(IEnumerable<Comment> comments)
            {
                padding += 10;
                var paddingString = $"padding-left:{padding}px";

                <div style=@paddingString>
                    @foreach (var comment in comments)
                    {
                        <div>
                        <label>@comment.User.UserName</label>
                        <label>@comment.CreatedAt</label>
                        <p>@comment.Content</p>
                        <button class="btn btn-secondary" onclick="showReply(@comment.Id)">Reply</button>

                        <div id="reply-@comment.Id" hidden>
                            <form method="post" asp-action="CreateComment" asp-route-PostId="@Model.Id" asp-route-CommentId="@comment.Id">
                                <textarea class="form-control comment-content" name="Content" placeholder="Make reply"></textarea>

                                <button class="btn btn-primary" type="submit">Respond</button>
                            </form>
                        </div>

                        @if (comment.Replies != null)
                        {
                            await RenderComments(comment.Replies);
                        }
                        </div>
                    }
                </div>
            }
        }

        @if (Model.Comments.Any())
        {
            await RenderComments(Model.Comments);
        }
        else
        {
            <label>Comments are empty.</label>
        }
    </div>
</div>

<script>
    function showComments() {
        const comments = document.getElementById('comments');
        if (comments.hidden) {
            comments.hidden = false;
        } else {
            comments.hidden = true;
        }
    }

    function showReply(id) {
        const reply = document.getElementById(`reply-${id}`);

        if (reply.hidden) {
            reply.hidden = false;
        } else {
            reply.hidden = true;
        }
    }
</script>